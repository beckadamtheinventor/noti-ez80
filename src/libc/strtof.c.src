	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__strtof_c
__strtof_c:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 6)
	ld	a, 1
	ld	(ix - 17), a
.BB0_1:
	ld	(ix - 3), bc
	push	bc
	pop	hl
	ld	(ix - 6), hl
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_isspace
	ld	bc, (ix - 3)
	pop	de
	inc	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, .BB0_1
	ld	(ix - 3), bc
	ld	hl, (ix - 6)
	ld	a, (hl)
	cp	a, 45
	ld	e, -1
	ld	c, 0
	ld	l, e
	jr	z, .BB0_4
	ld	l, c
.BB0_4:
	ld	(ix - 18), a
	cp	a, 43
	ld	iy, 0
	jr	z, .BB0_6
	ld	e, c
.BB0_6:
	ld	a, l
	or	a, e
	ld	l, a
	ld	bc, 1
	call	__iand
	ld	(ix - 9), hl
	ld	(ix - 6), iy
	dec	c
	ld	iy, (ix - 3)
.BB0_7:
	lea	hl, iy
	ld	de, (ix - 9)
	add	iy, de
	ld	d, (iy - 1)
	ld	a, d
	add	a, -48
	cp	a, 10
	jr	nc, .BB0_9
	or	a, a
	sbc	hl, hl
	ld	l, d
	ld	(ix - 13), c
	ld	de, -48
	add	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 6)
	ld	a, (ix - 13)
	ld	hl, 2097152
	ld	e, 65
	call	__fmul
	lea	hl, iy
	ld	iy, (ix - 3)
	ld	e, d
	call	__fadd
	ld	(ix - 6), bc
	ld	c, a
	ld	hl, (ix - 9)
	inc	hl
	ld	(ix - 9), hl
	jr	.BB0_7
.BB0_9:
	ld	(ix - 12), iy
	ld	a, d
	cp	a, 46
	jr	nz, .BB0_13
	ld	(ix - 13), c
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	de, (ix - 9)
	ld	iy, (ix - 3)
.BB0_11:
	lea	hl, iy
	add	hl, bc
	add	hl, de
	ld	d, (hl)
	ld	a, d
	add	a, -48
	cp	a, 10
	ld	(ix - 16), bc
	jr	nc, .BB0_14
	or	a, a
	sbc	hl, hl
	ld	l, d
	ld	de, -48
	add	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	ld	iy, (ix - 3)
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ld	(ix - 21), bc
	ld	d, a
	ld	bc, (ix - 6)
	ld	a, (ix - 13)
	ld	hl, 2097152
	ld	e, 65
	call	__fmul
	ld	hl, (ix - 21)
	ld	e, d
	call	__fadd
	ld	hl, (ix - 16)
	ld	(ix - 6), bc
	push	hl
	pop	bc
	ld	de, (ix - 9)
	ld	(ix - 13), a
	inc	bc
	jr	.BB0_11
.BB0_13:
	ld	hl, (ix - 12)
	dec	hl
	ld	(ix - 12), hl
	ld	iy, 0
	ld	(ix - 16), iy
	ld	e, c
	ld	bc, (ix - 6)
	jr	.BB0_15
.BB0_14:
	ld	hl, (ix - 12)
	add	hl, bc
	ld	(ix - 12), hl
	ld	e, (ix - 13)
	ld	bc, (ix - 6)
	ld	iy, 0
.BB0_15:
	ld	a, d
	cp	a, 69
	jr	z, .BB0_17
	ld	a, d
	cp	a, 101
	jr	nz, .BB0_21
.BB0_17:
	ld	iy, (ix - 12)
	ld	a, (iy + 1)
	cp	a, 43
	jr	nz, .BB0_19
	lea	iy, iy + 2
	jr	.BB0_23
.BB0_19:
	cp	a, 45
	jr	nz, .BB0_22
	ld	iy, (ix - 12)
	lea	iy, iy + 2
	ld	a, -1
	ld	(ix - 17), a
	jr	.BB0_23
.BB0_21:
	ld	(ix - 3), iy
	xor	a, a
	ld	hl, (ix + 9)
	ld	iy, (ix - 12)
	jr	.BB0_27
.BB0_22:
	ld	iy, (ix - 12)
	inc	iy
.BB0_23:
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
.BB0_24:
	ld	l, (iy)
	ld	a, l
	add	a, -48
	cp	a, 10
	jr	nc, .BB0_26
	ld	a, e
	ld	de, 0
	ld	e, l
	ld	hl, (ix - 3)
	ld	(ix - 12), iy
	push	bc
	pop	iy
	ld	bc, 10
	call	__imulu
	ld	bc, -48
	add	hl, bc
	lea	bc, iy
	ld	iy, (ix - 12)
	add	hl, de
	ld	(ix - 3), hl
	ld	e, a
	inc	iy
	jr	.BB0_24
.BB0_26:
	xor	a, a
	ld	hl, (ix + 9)
.BB0_27:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, .BB0_29
	ld	(hl), iy
.BB0_29:
	push	bc
	pop	hl
	push	bc
	pop	iy
	ld	bc, 0
	call	__fcmp
	jp	z, .BB0_38
	ld	(ix - 13), e
	ld	de, (ix - 3)
	push	de
	pop	hl
	call	__ineg
	ld	a, (ix - 17)
	cp	a, 0
	call	pe, __setflag
	jp	m, .BB0_32
	ex	de, hl
.BB0_32:
	ld	de, (ix - 16)
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	(ix - 3), bc
	ld	(ix - 6), iy
	jp	m, .BB0_34
	ld	bc, 0
.BB0_34:
	ld	(ix - 9), bc
	ld	bc, 1
	ld	d, 127
.BB0_35:
	ld	hl, (ix - 3)
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, .BB0_39
	ld	bc, (ix - 6)
	ld	a, (ix - 13)
	ld	hl, 2097152
	ld	e, 65
	call	__fmul
	ld	(ix - 6), bc
	push	bc
	pop	hl
	ld	(ix - 13), a
	ld	e, a
	ld	bc, -65536
	ld	a, -1
	call	__land
	ld	bc, -8388608
	ld	a, d
	call	__lcmpu
	jr	z, .BB0_40
	ld	hl, (ix - 3)
	dec	hl
	ld	(ix - 3), hl
	lea	bc, iy
	jr	.BB0_35
.BB0_38:
	lea	bc, iy
	jp	.BB0_49
.BB0_39:
	ld	hl, (ix - 9)
	ld	bc, (ix - 6)
	ld	a, (ix - 13)
	jr	.BB0_41
.BB0_40:
	ld	a, d
	ld	hl, 5
	ld	(_errno), hl
	ld	bc, -8388608
	ld	hl, (ix - 3)
.BB0_41:
	ld	(ix - 3), hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	de, (ix - 3)
	call	pe, __setflag
	push	de
	pop	hl
	ld	iy, 0
	jp	p, .BB0_43
	lea	hl, iy
.BB0_43:
	inc	hl
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	ld	e, a
.BB0_44:
	dec	iy
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, .BB0_47
	ld	a, e
	ld	hl, -3355443
	ld	e, 61
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, 65536
	xor	a, a
	call	__lcmpu
	push	hl
	pop	bc
	jr	nc, .BB0_44
	ld	hl, 5
	ld	(_errno), hl
.BB0_47:
	ld	a, (ix - 18)
	cp	a, 45
	jr	nz, .BB0_49
	ld	iyh, 16
	ld	iyl, e
	push	bc
	pop	de
	ld	a, iyl
	ex	de, hl
	ld	e, iyh
	ex	de, hl
	call	__lshru
	ld	l, c
	ld	h, b
	ld.sis	bc, -32768
	call	__sor
	ld	bc, 0
	ld	c, l
	ld	b, h
	xor	a, a
	ex	de, hl
	ld	e, iyh
	ex	de, hl
	call	__lshl
	ld	(ix - 3), bc
	ld	iyh, a
	ex	de, hl
	ld	e, iyl
	ld	bc, 65535
	xor	a, a
	call	__land
	push	hl
	pop	bc
	ld	a, e
	ld	hl, (ix - 3)
	ld	e, iyh
	call	__ladd
	push	hl
	pop	bc
.BB0_49:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__strtod_c
	label	__strtod_c at __strtof_c

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_isspace
	extern	__fadd
	extern	_errno
	extern	__fmul
	extern	__ladd
	extern	__setflag
	extern	__Unwind_SjLj_Unregister
	extern	__lshl
	extern	__iand
	extern	__imulu
	extern	__land
	extern	__ineg
	extern	__ltof
	extern	__sor
	extern	__fcmp
	extern	__lshru
	extern	__lcmpu
