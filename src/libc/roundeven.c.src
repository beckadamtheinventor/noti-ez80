	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_roundevenf
_roundevenf:
	ld	hl, -10
	call	__frameset
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	pea	ix - 4
	ld	e, a
	push	de
	push	hl
	call	_modff
	pop	bc
	pop	bc
	pop	bc
	ld	bc, 0
	ld	a, 63
	call	__fcmp
	jp	p, .BB0_2
	ld	iy, (ix - 4)
	ld	d, (ix - 1)
	jp	.BB0_8
.BB0_2:
	ld	iy, (ix - 4)
	ld	d, (ix - 1)
	ld	bc, 0
	ld	a, 63
	call	__fcmp
	jp	nz, .BB0_7
	scf
	sbc	hl, hl
	push	hl
	ld	l, d
	push	hl
	push	iy
	call	_ldexp
	ld	(ix - 10), hl
	ld	(ix - 7), de
	pop	bc
	pop	bc
	pop	bc
	push	de
	push	hl
	call	_truncf
	pop	bc
	pop	bc
	ld	bc, (ix - 10)
	ld	iy, (ix - 7)
	ld	a, iyl
	call	__fcmp
	jr	z, .BB0_5
	ld	a, 0
	jr	.BB0_6
.BB0_5:
	ld	a, 1
.BB0_6:
	ld	iy, (ix - 4)
	ld	d, (ix - 1)
	bit	0, a
	jr	nz, .BB0_8
.BB0_7:
	ld	(ix - 10), iy
	ld	hl, -8388608
	ld	(ix - 7), d
	ld	e, d
	push	de
	push	iy
	ld	de, 63
	push	de
	push	hl
	call	_copysignf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	bc, (ix - 10)
	ld	a, (ix - 7)
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
.BB0_8:
	lea	hl, iy
	ld	e, d
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_roundevenl
_roundevenl:
	ld	hl, -17
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	pea	ix - 8
	push	bc
	push	de
	push	hl
	call	_modfl
	pop	iy
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 16352
	push	iy
	ld	iy, 0
	push	iy
	push	iy
	call	__dcmp
	pop	iy
	pop	iy
	pop	iy
	jp	p, .BB1_2
	ld	hl, (ix - 8)
	ld	(ix - 11), hl
	ld	bc, (ix - 5)
	ld	hl, (ix - 2)
	ld	(ix - 14), hl
	jp	.BB1_9
.BB1_2:
	ld	iy, (ix - 8)
	ld	(ix - 11), iy
	ld	iy, (ix - 5)
	ld	(ix - 17), iy
	ld	iy, (ix - 2)
	ld	(ix - 14), iy
	ld	iy, 16352
	push	iy
	ld	iy, 0
	push	iy
	push	iy
	call	__dcmp
	pop	hl
	pop	hl
	pop	hl
	jp	nz, .BB1_5
	scf
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 14)
	push	hl
	ld	hl, (ix - 17)
	push	hl
	ld	hl, (ix - 11)
	push	hl
	call	_ldexpl
	ld	(ix - 11), hl
	ld	(ix - 14), de
	ld	(ix - 17), bc
	pop	iy
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	call	_truncl
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 17)
	push	iy
	ld	iy, (ix - 14)
	push	iy
	ld	iy, (ix - 11)
	push	iy
	call	__dcmp
	pop	hl
	pop	hl
	pop	hl
	jr	z, .BB1_6
	ld	a, 0
	jr	.BB1_7
.BB1_5:
	ld	bc, (ix - 17)
	jr	.BB1_8
.BB1_6:
	ld	a, 1
.BB1_7:
	ld	hl, (ix - 8)
	ld	(ix - 11), hl
	ld	bc, (ix - 5)
	ld	hl, (ix - 2)
	ld	(ix - 14), hl
	bit	0, a
	ld	iy, 0
	jp	nz, .BB1_9
.BB1_8:
	ld	(ix - 17), bc
	ld	hl, (ix - 14)
	push	hl
	push	bc
	ld	hl, (ix - 11)
	push	hl
	ld	hl, 16368
	push	hl
	push	iy
	push	iy
	call	_copysign
	ld	iy, 18
	add	iy, sp
	ld	sp, iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 11)
	ld	de, (ix - 17)
	ld	bc, (ix - 14)
	call	__dadd
	ld	(ix - 11), hl
	ld	(ix - 14), bc
	push	de
	pop	bc
	pop	hl
	pop	hl
	pop	hl
.BB1_9:
	ld	hl, (ix - 11)
	push	bc
	pop	de
	ld	bc, (ix - 14)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_roundeven
	label	_roundeven at _roundevenf

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	_ldexpl
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	_ldexp
	extern	__dcmp
	extern	_modff
	extern	__fadd
	extern	_copysignf
	extern	_modfl
	extern	__fcmp
	extern	_copysign
	extern	_truncf
	extern	_truncl
	extern	__dadd
