	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_strtoll
_strtoll:
	ld	hl, -25
	call	__frameset
	ld	iy, (ix + 6)
	ld.sis	hl, 0
	ld	(ix - 9), hl
.BB0_1:
	ld	(ix - 3), iy
	ld	(ix - 6), iy
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_isspace
	ld	iy, (ix - 3)
	pop	de
	inc	iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, .BB0_1
	ld	hl, (ix - 6)
	ld	a, (hl)
	cp	a, 45
	ld	e, -1
	ld	c, 0
	ld	l, e
	jr	z, .BB0_4
	ld	l, c
.BB0_4:
	ld	(ix - 13), a
	cp	a, 43
	jr	z, .BB0_6
	ld	e, c
.BB0_6:
	ld	a, l
	or	a, e
	ld	l, a
	ld	bc, 1
	call	__iand
	push	hl
	pop	bc
	lea	de, iy
	ld	(ix - 6), bc
	add	iy, bc
	lea	bc, iy
	dec	bc
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 12), bc
	jr	nz, .BB0_10
	ld	a, (iy - 1)
	cp	a, 48
	jr	nz, .BB0_16
	ld	a, (iy)
	add	a, -88
	and	a, -33
	or	a, a
	ld	hl, 16
	jr	z, .BB0_18
	ld	hl, 8
	jr	.BB0_18
.BB0_10:
	ld	(ix - 3), de
	push	hl
	pop	bc
	ld	de, 16
	or	a, a
	sbc	hl, de
	jr	nz, .BB0_17
	ld	a, (iy - 1)
	cp	a, 48
	jr	nz, .BB0_15
	ld	a, (iy)
	cp	a, 88
	jr	z, .BB0_14
	cp	a, 120
	jr	nz, .BB0_15
.BB0_14:
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	add	hl, de
	inc	hl
	ld	(ix - 12), hl
.BB0_15:
	ld	de, 0
	ld	hl, 16
	jr	.BB0_19
.BB0_16:
	ld	hl, 10
	jr	.BB0_18
.BB0_17:
	push	bc
	pop	hl
.BB0_18:
	ld	de, 0
.BB0_19:
	ld	c, 16
	ld	(ix - 22), hl
	call	__ishl
	call	__ishrs
	ld	(ix - 19), hl
	push	de
	pop	iy
.BB0_20:
	ld	(ix - 6), de
	ld	(ix - 3), iy
	ld	hl, (ix - 12)
	ld	(ix - 16), hl
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_toupper
	pop	de
	ld	a, l
	cp	a, 65
	call	pe, __setflag
	ld	a, -55
	jp	p, .BB0_22
	ld	a, -48
.BB0_22:
	add	a, l
	ld	bc, 0
	cp	a, b
	call	pe, __setflag
	ld	iy, (ix + 9)
	jp	m, .BB0_27
	ld	c, a
	push	bc
	pop	hl
	ld	de, (ix - 19)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, .BB0_27
	ld	de, (ix - 22)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	(ix - 25), bc
	ld	bc, (ix - 16)
	inc	bc
	ld	(ix - 12), bc
	push	hl
	push	hl
	push	de
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	ld	bc, (ix - 9)
	call	__llmulu
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, (ix - 25)
	push	iy
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 9)
	push	iy
	ld	iy, (ix - 6)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llcmps
	pop	iy
	pop	iy
	pop	iy
	call	pe, __setflag
	push	hl
	pop	iy
	ld	l, c
	ld	h, b
	ld	(ix - 9), hl
	jp	p, .BB0_20
	ld	e, (ix - 13)
	ld	a, e
	cp	a, 45
	jr	z, .BB0_48
	ld	a, 0
	jr	.BB0_49
.BB0_27:
	ld	hl, (ix - 9)
	ld	c, l
	ld	b, h
	ld	e, (ix - 13)
.BB0_28:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, .BB0_38
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, .BB0_36
	ld	hl, (ix - 16)
.BB0_31:
	ld	a, (hl)
	cp	a, 76
	jr	z, .BB0_35
	cp	a, 104
	jr	z, .BB0_35
	cp	a, 108
	jr	z, .BB0_35
	cp	a, 117
	jr	nz, .BB0_37
.BB0_35:
	inc	hl
	jr	.BB0_31
.BB0_36:
	ld	hl, (ix - 16)
.BB0_37:
	ld	(iy), hl
.BB0_38:
	ld	a, e
	cp	a, 45
	jr	z, .BB0_40
	ld	a, 0
	jr	.BB0_41
.BB0_40:
	ld	a, -1
.BB0_41:
	ld	iy, (ix - 3)
	ld	de, (ix - 6)
	lea	hl, iy
	ld	(ix - 3), bc
	call	__llneg
	bit	0, a
	jr	nz, .BB0_43
	lea	hl, iy
.BB0_43:
	bit	0, a
	jr	nz, .BB0_45
	ld	de, (ix - 6)
.BB0_45:
	bit	0, a
	jr	nz, .BB0_47
	ld	bc, (ix - 3)
.BB0_47:
	ld	sp, ix
	pop	ix
	ret
.BB0_48:
	ld	a, -1
.BB0_49:
	ld	iy, 0
	ld.sis	bc, -32768
	bit	0, a
	ld	(ix - 6), iy
	ld	(ix - 3), iy
	ld	iy, (ix + 9)
	jr	nz, .BB0_51
	scf
	sbc	hl, hl
	ld	(ix - 3), hl
.BB0_51:
	bit	0, a
	jr	nz, .BB0_53
	scf
	sbc	hl, hl
	ld	(ix - 6), hl
.BB0_53:
	bit	0, a
	jr	nz, .BB0_55
	ld.sis	bc, 32767
.BB0_55:
	ld	hl, 5
	ld	(_errno), hl
	jp	.BB0_28
	section	.text,"ax",@progbits

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	_toupper
	extern	__llneg
	extern	__frameset
	extern	_isspace
	extern	_errno
	extern	__ishrs
	extern	__ishl
	extern	__setflag
	extern	__llcmps
	extern	__Unwind_SjLj_Unregister
	extern	__iand
	extern	__lladd
	extern	__llmulu
