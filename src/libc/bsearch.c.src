	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_bsearch
_bsearch:
	ld	hl, -12
	call	__frameset
	ld	iy, 1
	ld	c, iyl
.BB0_1:
	lea	de, iy
	push	de
	pop	hl
	call	__ishl
	push	hl
	pop	iy
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, de
	jr	nc, .BB0_1
	push	de
	pop	iy
	ld	a, 1
	ld	bc, 0
	push	bc
	pop	de
.BB0_3:
	ld	(ix - 6), bc
.BB0_4:
	ld	(ix - 3), de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	ld	c, a
	call	__ishru
	ld	bc, (ix - 6)
	add	hl, bc
	ex	de, hl
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	jr	z, .BB0_14
	ld	(ix - 3), iy
	push	de
	pop	hl
	push	de
	pop	iy
	ld	de, (ix + 12)
	or	a, a
	sbc	hl, de
	lea	de, iy
	jr	nc, .BB0_4
	ld	(ix - 12), iy
	lea	hl, iy
	ld	bc, (ix + 15)
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 9)
	add	hl, de
	ld	(ix - 9), hl
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	hl, (ix + 18)
	call	__indcallhl
	ld	bc, (ix - 9)
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, .BB0_15
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, -1
	ld	l, d
	jp	m, .BB0_9
	ld	a, l
.BB0_9:
	bit	0, a
	ld	de, (ix - 12)
	push	de
	pop	iy
	ld	bc, (ix - 6)
	ld	hl, (ix - 3)
	jr	nz, .BB0_11
	push	hl
	pop	iy
.BB0_11:
	bit	0, a
	jr	nz, .BB0_13
	push	de
	pop	bc
.BB0_13:
	ld	a, 1
	jp	.BB0_3
.BB0_14:
	ld	bc, 0
.BB0_15:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__setflag
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__indcallhl
	extern	__imulu
	extern	__ishl
	extern	__ishru
